// Automatically generated by misc/build-worker-template.js.
// Do not edit manually -- instead, run misc/build-worker-template.js

// src/app/worker-template.js
export const worker = [
  "(function(_postMessage,_close,globalObj,_amd){const requestIdProp=\"__figpadRequestId\";const requestErrProp=\"__figpadRequestError\";let recvp,recvres,recvrej;let msgq=[];let requestq=[];let workerInitialized=false;function recv(){if(!recvp){if(msgq.length>0){return Promise.resolve(msgq.shift())}recvp=new Promise((res,rej)=>{recvres=res;recvrej=rej})}return recvp}let onrequest=void 0;Object.defineProperty(globalObj,\"onrequest\",{get(){return onrequest},set(f){onrequest=f;if(onrequest&&workerInitialized&&requestq.length>0){requestqFlush()}},enumerable:true});function requestqFlush(){requestq.forEach(r2=>handleRequest(r2));requestq.length=0}function onInit(err){workerInitialized=true;if(onrequest&&requestq.length>0){requestqFlush()}}function handleRequest(data){const requestId=data[requestIdProp];const f=globalObj.onrequest;const response={[requestIdProp]:requestId};let r2=null;if(f){try{r2=f({id:requestId,data:data.data})}catch(err){response[requestErrProp]=String(err.stack||err)}}else{response[requestErrProp]=\"No onrequest handler registered in worker\"}const reply=r3=>{response.data=r3;postMessage(response)};if(r2 instanceof Promise){r2.then(reply).catch(err=>{console.warn(\"[worker] error in promise: \"+(err.stack||err));response[requestErrProp]=String(err?err.stack||err:\"error\");reply(null)})}else{reply(r2)}}globalObj.addEventListener(\"message\",ev=>{if(ev.data&&typeof ev.data==\"object\"&&requestIdProp in ev.data){if(!workerInitialized||!onrequest){requestq.push(ev.data)}else{handleRequest(ev.data)}ev.stopPropagation();ev.preventDefault();return}if(recvp){recvp=null;recvres(ev.data)}else if(!workerInitialized||msgq.length<10){msgq.push(ev.data)}},{capture:true});globalObj.addEventListener(\"messageerror\",ev=>{if(recvp){recvp=null;recvrej(ev.data)}});function postMessage(data,transfer){try{return _postMessage({data,transfer},transfer)}catch(err){if(data&&typeof data==\"object\"&&typeof data.toJSON==\"function\"){transfer=void 0;return _postMessage({data:data.toJSON(),transfer},transfer)}throw err}}function send(data,transfer){return postMessage(data,transfer)}function close(){if(requestq.length>0&&!onrequest){__onerror(\"request() was called but no onrequest handler was registered\")}postMessage({type:\"__figpad_close\"});_close()}function print(...msg){console.log(...msg)}function timer(timeout){let timer2=null;const p=new Promise((resolve,reject2)=>{timer2=setTimeout(()=>{timer2=null;resolve()},timeout)});p.cancel=()=>{if(timer2!==null){clearTimeout(timer2);reject(new Error(\"timer cancelled\"))}};return p}function __onerror(err){postMessage({type:\"__figpad_toplevel_err\",message:err?String(err):\"unknown error\",stack:err&&err.stack||\"\"})}try{let r=eval((",
  "))((()=>{let w=globalObj;w.send=w.postMessage=postMessage;w.recv=recv;w.close=close;w.print=print;w.importCommonJS=url=>{globalObj.exports={};globalObj.module={id:\"figpad\",exports:globalObj.exports};return w.importScripts(url).then(()=>{let exports=globalObj.module.exports;delete globalObj.module;delete globalObj.exports;return exports})};return w})());onInit(null);if(r instanceof Promise){r.catch(__onerror)}}catch(err){console.warn(\"error in worker-template\",err);onInit(err);__onerror(err)}})(typeof __figpadPostMessage!=\"undefined\"?__figpadPostMessage:self.postMessage.bind(self),typeof __figpadClose!=\"undefined\"?__figpadClose:self.close.bind(self),typeof window!=\"undefined\"?window:self,(globalObj2=>{const CHECK_CYCLES=false;const DEBUG=false;function emptyFunction(){}const assert=DEBUG?cond=>{if(!cond){throw new Error(\"assertion failure\")}}:emptyFunction;const logdebug=DEBUG?function(){console.log.apply(console,[\"[define]\"].concat([].slice.call(arguments)))}:emptyFunction;let modules=new Map;let waiting=new Map;function define_require(id){let m=modules.get(id);if(!m){throw new Error(`unknown module \"${id}\"`)}return m.init?void 0:m[\"exports\"]}function Module(id,exports,deps,fn){this[\"id\"]=id;this[\"exports\"]=exports;this.deps=deps;this.fn=fn;this.init=null;this.waitdeps=null}function deppath(m,id){if(m.waitdeps){for(let wdepid of m.waitdeps){if(wdepid==id){return[m[\"id\"]]}let wdepm=modules.get(wdepid);if(wdepm){let path=deppath(wdepm,id);if(path){return[m[\"id\"]].concat(path)}}}}return null}function mfinalize(m){m.init=null;let waitingDependants=waiting.get(m[\"id\"]);waiting.delete(m[\"id\"]);if(m.fn){let res=m.fn.apply(m[\"exports\"],m.deps);if(res){m[\"exports\"]=res}m.fn=null}m.deps=null;m.waitdeps=null;if(waitingDependants){for(let depid of waitingDependants){let depm=modules.get(depid);if(depm.init){if(depm.waitdeps.size==1){depm.init()}else{depm.waitdeps.delete(m[\"id\"])}}}assert(typeof m[\"id\"]!=\"symbol\")}else if(typeof m[\"id\"]==\"symbol\"){modules.delete(m[\"id\"])}}function*minitg(m,deps){while(true){for(let i=0,L=deps.length;i!=L;++i){let depid=deps[i];if(m.deps[i]!==void 0){continue}if(depid==\"require\"){m.deps[i]=define_require}else if(depid==\"exports\"){m.deps[i]=m[\"exports\"]}else if(depid==\"module\"){m.deps[i]=m}else{let depm=modules.get(depid);if(depm&&!depm.init){m.deps[i]=depm[\"exports\"];if(m.waitdeps){m.waitdeps.delete(depid)}}else{if(!m.waitdeps){m.waitdeps=new Set([depid])}else if(!m.waitdeps.has(depid)){m.waitdeps.add(depid)}else{continue}if(CHECK_CYCLES&&depm){let cycle=deppath(depm,m[\"id\"]);if(cycle){if(cycle[cycle.length-1]!=m[\"id\"]){cycle.push(m[\"id\"])}throw new Error(`Cyclic module dependency: ${m[\"id\"]} -> ${cycle.join(\" -> \")}`)}}}}}if(!m.waitdeps||m.waitdeps.size==0){break}yield m.waitdeps}mfinalize(m)}function minit(m,deps){let initg=minitg(m,deps);return function init(){logdebug(\"attempting to resolve dependencies for\",m[\"id\"]);let v=initg.next();if(v.done){logdebug(\"completed initialization of\",m[\"id\"]);return true}for(let depid of v.value){let waitset=waiting.get(depid);if(waitset){waitset.add(m[\"id\"])}else{waiting.set(depid,new Set([m[\"id\"]]))}}return false}}let timeoutTimer=null;let timeoutReached=false;function timeout(){clearTimeout(timeoutTimer);timeoutTimer=null;timeoutReached=true;if(waiting&&waiting.size>0){let v=[];for(let id of waiting.keys()){if(!modules.has(id)){v.push(id)}}if(v.length){throw new Error(`Module load timeout -- still waiting on \"${v.join('\", \"')}\"`)}}}let _currentScriptURL=\"\";const getCurrentScriptURL=globalObj2.document?()=>globalObj2.document.currentScript?globalObj2.document.currentScript.src:\"\":()=>_currentScriptURL;function define(id,deps,fn){logdebug(\"define\",id,deps,typeof fn);if(define.timeout&&define.timeout>0){if(timeoutReached){logdebug(\"define bailing out since timeout has been reached\");return}clearTimeout(timeoutTimer);timeoutTimer=setTimeout(timeout,define.timeout)}let objfact=1;switch(typeof id){case\"function\":fn=id;id=null;deps=[];objfact=0;break;case\"object\":fn=deps;deps=id;id=null;if(typeof fn!=\"function\"){throw new Error(\"object module without id\")}break;default:objfact=0;if(typeof deps==\"function\"){fn=deps;deps=[]}else if(!fn){fn=deps;deps=[];objfact=2}break}if(!id){id=getCurrentScriptURL()||null;if(modules.has(id)){id=null}}if(!deps||deps.length==0){logdebug(\"taking a shortcut becase\",id,\"has no dependencies\");if(objfact==1&&typeof fn!=\"function\"){objfact=2}let m2=new Module(id,objfact?fn:{},null,objfact?null:fn);if(id){modules.set(id,m2);mfinalize(m2)}else{fn.apply(m2[\"exports\"]);m2.fn=null}return true}if(typeof fn!=\"function\"){throw new Error(\"object module with dependencies\")}let m=new Module(id||Symbol(\"\"),{},new Array(deps.length),fn);modules.set(m[\"id\"],m);m.init=minit(m,deps);return m.init()}const _importScripts=typeof __figpadImportScripts!=\"undefined\"?__figpadImportScripts:(f=>(...urls)=>Promise.resolve(f(...urls)))(self.importScripts.bind(self));let importScriptsLegacyNest=0;async function importScriptsLegacy(...urls){importScriptsLegacyNest++;if(importScriptsLegacyNest==1){globalObj2[\"define\"]=null}try{await _importScripts(...urls)}finally{importScriptsLegacyNest--;if(importScriptsLegacyNest==0){globalObj2[\"define\"]=define}}}const awaitImportAll=urls=>{return new Promise((resolve,reject2)=>{let defined=false;let tryingCommonJs=false;define(\"_\",urls,(...apis)=>{if(!tryingCommonJs){defined=true;resolve(apis)}});if(!defined){let next2=function(){const cleanUp=()=>{globalObj2[\"module\"]=void 0;globalObj2[\"exports\"]=void 0};let url=urls[i++];if(!url){cleanUp();return resolve(apis)}let m=modules.get(url);if(m){logdebug(`[cjs] ${url} did call define() [shortcut]`);apis.push(m.exports);return next2()}logdebug(`[cjs] ${url} did not call define() -- loading in commonjs env...`);globalObj2[\"exports\"]=(globalObj2[\"module\"]={id:url,exports:{}})[\"exports\"];_importScripts(url).then(()=>{apis.push(globalObj2[\"module\"].exports);next2()}).catch(err=>{cleanUp();reject2(err)})};var next=next2;logdebug(\"some modules did not call amd define(); falling back to commonjs emulation\");tryingCommonJs=true;let i=0;let apis=[];next2()}})};const urlre=/^https?:\\/\\/[^\\r\\n]+$/;const filterUrls=urls=>urls.map(url=>urlre.test(url)?url:`https://unpkg.com/${url}`);const importAll=globalObj2.importScripts&&globalObj2.document===void 0?(importScripts=>function importAll2(...urls){urls=filterUrls(urls);for(let url of urls){_currentScriptURL=url;try{importScripts(url)}finally{_currentScriptURL=\"\"}}return awaitImportAll(urls)})(globalObj2.importScripts.bind(globalObj2)):function importAll2(...urls){urls=filterUrls(urls);return _importScripts(...urls).then(()=>awaitImportAll(urls))};define[\"timeout\"]=0;define[\"require\"]=define_require;define[\"amd\"]={};globalObj2[\"define\"]=define;globalObj2[\"importAll\"]=importAll;globalObj2[\"importScripts\"]=importScriptsLegacy;globalObj2[\"import\"]=url=>importAll(url).then(v=>v[0])})(typeof window!=\"undefined\"?window:self));\n"
];

// src/app/worker-frame-template.js
export const frame = [
  "(scriptfn=>{function importScripts(...urls){return Promise.all(urls.map(url=>new Promise((resolve,reject)=>{let s=document.createElement(\"script\");s.src=url;s.type=\"text/javascript\";s.async=true;s.onload=resolve;s.onerror=reject;document.head.appendChild(s)})))}let postMessage=window.parent.postMessage.bind(window.parent);function _postMessage(msg,transfer){postMessage(msg,\"*\",transfer)}_postMessage(\"__figpad_iframe_ready\");function close(){_postMessage(\"__figpad_iframe_close\")}window[\"__figpadPostMessage\"]=window.postMessage;window[\"createElement\"]=function createElement(name,attrs,...children){let el=document.createElement(name);if(attrs)for(let k in attrs){const v=attrs[k];if(k==\"style\"){Object.assign(el.style,v)}else if(k==\"className\"){el.className=v}else if(typeof v==\"function\"){el[k]=v}else{el.setAttribute(k,v)}}for(let n of children){if(n instanceof Node){el.appendChild(n)}else if(n!==void 0&&n!==null){el.appendChild(document.createTextNode(String(n)))}}return el};scriptfn(window,_postMessage,importScripts,close)})((self,__figpadPostMessage,__figpadImportScripts,__figpadClose)=>{",
  "});\n"
];
