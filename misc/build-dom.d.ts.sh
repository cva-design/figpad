#!/bin/bash -e
cd "$(dirname "$0")/.."

outdir=docs
if [[ "$1" != "" ]]; then outdir=$1 ; fi

if [[ "node_modules/typescript/lib/lib.dom.d.ts" -nt "$outdir/lib.dom.d.ts" ]] || \
   [[ "node_modules/typescript/lib/lib.dom.iterable.d.ts" -nt "$outdir/lib.dom.d.ts" ]] || \
   [[ "$0" -nt "$outdir/lib.dom.d.ts" ]]
then

node - "$outdir/lib.dom.d.ts" <<__JS
import { readFileSync, writeFileSync } from 'node:fs'
import { createHash } from 'node:crypto'
import { basename } from 'node:path'

const outfile = process.argv[2]

let dom = ""
dom = readFileSync("node_modules/typescript/lib/lib.dom.d.ts", "utf8") + "\n" +
      readFileSync("node_modules/typescript/lib/lib.dom.iterable.d.ts", "utf8")

dom = 'declare namespace WebDOM {\n' +
      dom.replace(/declare\s+|\/\/\/\s*<reference[^\r\n]+/g, "") + "\n" +
      "} // namespace WebDOM\n"

const hash = createHash("sha1")
hash.update(dom)
const version = hash.digest("base64").replace(/=+/g, "")
const tslib_info = (
  "// generated by $0\n" +
  "export const dom = " + JSON.stringify({
    version,
    filename: basename(outfile),
  }) + ";\n"
)

console.log("Write", outfile)
writeFileSync(outfile, s, "utf8")

const infofile = "src/app/tslib-info.ts"
if (readFileSync(infofile, "utf8") != tslib_info) {
  console.log("Write", infofile)
  writeFileSync(infofile, tslib_info, "utf8")
}

__JS
fi
