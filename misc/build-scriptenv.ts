import { readFileSync, writeFileSync } from 'node:fs'
import { relative, join, dirname } from 'node:path'
import { fileURLToPath } from 'node:url'

const __filename = fileURLToPath(import.meta.url)
const __dirname = dirname(__filename)

const prog: string = relative(process.cwd(), __filename)
const infile: string = "src/common/scripter-env.d.ts"
const outfile: string = "src/figma-plugin/scriptenv.d.ts"

process.chdir(join(__dirname, ".."))
const a: string = readFileSync(infile, "utf8")
const b: string = (
`// Automatically generated from ${infile} by ${prog}.
// Do not edit manually -- instead, run ${prog}

export type ScriptEnv = typeof scriptenv
declare namespace scriptenv {
${a.replace(/declare\s*global\s*\{/, "\n")
   .replace(/\}\s*\/\/\s*declare\s*global[^\n\r]*/, "\n")
   .replace(/export\s*\{\};?/, "\n")
   .replace(/\/\/\/\s*<[^\r\n]+/, "\n")}}\n`
)

// let b = (
//   `// Automatically generated by ${prog}.\n` +
//   `// Do not edit manually -- instead, run ${prog}\n` +
//   "\n" +
//   "export const __esmodule :bool\n" +
//   a.replace(/\n\s*declare/g, "\nexport")
// )

let b1: string = ""

try {
  b1 = readFileSync(outfile, "utf8")
} catch (_) {}
if (b1 !== b) {
  console.log(`${prog}: write ${outfile}`)
  writeFileSync(outfile, b, "utf8")
}
